# Declare a variable for the compliler which we are going to use
CXX=g++
# Declare another variable with the flags which we are going to use
CXXFLAGS=-g -Wall -std=c++11 -pthread -DDEBUG

OBJDIR=build

Debug: test_vector test_server test_utils  gdbd

default: test_vector test_server test_utils  gdbd

gdbd: init graphutils.o gdbserver.o gdbserver.h config.h
	$(CXX) $(CXXFLAGS) gdbdaemon.cpp -o $(OBJDIR)/gdbd $(OBJDIR)/graphutils.o $(OBJDIR)/gdbserver.o

test_server: init graphutils.o gdbserver.o gdbserver.h config.h
	$(CXX) $(CXXFLAGS) test_server.cpp -o $(OBJDIR)/test_server $(OBJDIR)/graphutils.o $(OBJDIR)/gdbserver.o

#test_graph: test.o
#	$(CXX) $(CXXFLAGS) -o $(OBJDIR)/test_graph $(OBJDIR)/test.o $(OBJDIR)/graph.o $(OBJDIR)/graphfiles.o 

test_vector: test_vector.o 
	$(CXX) $(CXXFLAGS) -o $(OBJDIR)/test_vector $(OBJDIR)/test_vector.o $(OBJDIR)/graphutils.o

test_utils: init test_utils.o
	$(CXX) $(CXXFLAGS) -o $(OBJDIR)/test_utils $(OBJDIR)/test_utils.o $(OBJDIR)/graphutils.o

gdbserver.o: init graphutils.o gdbserver.h config.h
	$(CXX) $(CXXFLAGS) -c gdbserver.cpp -o $(OBJDIR)/gdbserver.o

test_vector.o: init graphutils.o 
	$(CXX) $(CXXFLAGS) -c test_vector.cpp -o $(OBJDIR)/test_vector.o

test_utils.o: init graphutils.o 
	$(CXX) $(CXXFLAGS) -c test_utils.cpp -o $(OBJDIR)/test_utils.o

#test.o: graphfiles.o 
#	$(CXX) $(CXXFLAGS) -c test.cpp -o $(OBJDIR)/test.o

#graphfiles.o: graph.o graphutils.o graphfiles.h graphutils.h
#	$(CXX) $(CXXFLAGS) -c graphfiles.cpp -o $(OBJDIR)/graphfiles.o


graph.o: init graphutils.o graph.h graphutils.h
	$(CXX) $(CXXFLAGS) -c graph.cpp -o $(OBJDIR)/graph.o

graphutils.o: primitives.h graphutils.h extlib/json/json.hpp
	$(CXX) $(CXXFLAGS) -fPIC -c graphutils.cpp -o $(OBJDIR)/graphutils.o

init: 
	- mkdir -p $(OBJDIR)

clean:
	- rm -rf $(OBJDIR)